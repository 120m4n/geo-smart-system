class r{constructor(){this.subIds=0,this.subscriptions={}}subscribe(s,e){this.subscriptions[s]||(this.subscriptions[s]={});const i=++this.subIds;return this.subscriptions[s][i]=e,()=>this.unsubscribe(s,i)}publish(s,...e){const i=this.subscriptions[s];if(!i)return!1;Object.values(i).forEach(n=>n(...e))}unsubscribe(s,e){e||delete this.subscriptions[s],this.subscriptions[s]&&delete this.subscriptions[s][e]}}const o=new r;var a=window.parent;class u{constructor(s,e,i,n=new Date){this.type=s,this.action=e,this.payload=i,this.timestamp=n}}function c(t,s,e,i){if(t){const n=new u(s,e,i);t.postMessage(n,"*")}}const b=()=>{window.addEventListener("message",t=>{const s=t.data;if(!s||typeof s!="object"||!("type"in s)||!("action"in s)||!("payload"in s)){console.log("Received message with unexpected structure",s);return}if(s.type==="request"&&!s.action&&console.log("RECEIVED message from PARENT TO CHILD",s.payload),s.type==="request"&&s.action==="initialView"){if(!("longitud"in s.payload)||!("latitud"in s.payload)||!("zoom"in s.payload)){console.log("Received message with unexpected structure",s);return}o.publish("initialView",s.payload)}s.type==="request"&&s.action==="cargarSeleccion"&&o.publish("cargarSeleccion",s.payload)}),window.addEventListener("load",()=>{setTimeout(function(){c(a,"response","shakehand",!0)},500)}),o.subscribe("feedbackParent",t=>{const s=t.type?t.type:"feedbackParent",e=t.body?t.body:{};c(a,"response",s,e)})};export{o as P,b as i};
